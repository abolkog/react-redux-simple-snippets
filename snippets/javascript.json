{
  "React Class Component": {
    "prefix": "rcc",
    "description": "Class Based Component Skeleton",
    "body": [
      "import React, { Component } from 'react';",
      " ",
      "class $1 extends Component {",
      "\trender() { ",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$1",
      "\t\t\t</div>",
      "\t\t);",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },
  "React Class Component with Constructor": {
    "prefix": "rccc",
    "description": "Class Component with Constructor Skeleton",
    "body": [
      "import React, { Component } from 'react';",
      " ",
      "class $1 extends Component {",
      "\tconstructor(props) {",
      "\t\tsuper(props);",
      "\t\tthis.state = {};",
      "\t}",
      "\trender() { ",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$1",
      "\t\t\t</div>",
      "\t\t);",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },
  "React Class Component with Redux Connect": {
    "prefix": "rcr",
    "description": "Class Based Component with React Redux",
    "body": [
      "import React, { Component } from 'react';",
      "import { connect } from 'react-redux';",
      " ",
      "class $1 extends Component {",
      "\trender() { ",
      "\t\treturn (",
      "\t\t\t<div>",
      "\t\t\t\t$1",
      "\t\t\t</div>",
      "\t\t);",
      "\t}",
      "}",
      " ",
      "export default connect()($1);"
    ]
  },
  "React Native Functional Component": {
    "prefix": "rnfc",
    "description": "Creates React Native Functional Component Skeleton",
    "body": [
      "import React from 'react';",
      "import { View, Text, StyleSheet } from 'react-native';",
      " ",
      "const styles = StyleSheet.create({",
      "\tcontainer: {",
      "\t\tflex: 1",
      "\t}",
      "});",
      " ",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<View style={styles.container}>",
      "\t\t\t<Text>$1</Text>",
      "\t\t</View>",
      "\t);",
      "}",
      "",
      " ",
      "export default $1;"
    ]
  },
  "React Native Component": {
    "prefix": "rncc",
    "description": "Creates React Native Class Based Component Skeleton",
    "body": [
      "import React, { Component } from 'react';",
      "import { View, Text, StyleSheet } from 'react-native';",
      " ",
      "const styles = StyleSheet.create({",
      "\tcontainer: {",
      "\t\tflex: 1",
      "\t}",
      "});",
      " ",
      "class $1 extends Component {",
      "\trender() { ",
      "\t\treturn (",
      "\t\t\t<View style={styles.container}>",
      "\t\t\t\t<Text>$1</Text>",
      "\t\t\t</View>",
      "\t\t);",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },
  "React Native Component with Redux Connect": {
    "prefix": "rncr",
    "description": "Creates React Native Class Based Component with Redux Connect Skeleton",
    "body": [
      "import React, { Component } from 'react';",
      "import { View, Text, StyleSheet } from 'react-native';",
      "import { connect } from 'react-redux';",
      " ",
      "const styles = StyleSheet.create({",
      "\tcontainer: {",
      "\t\tflex: 1",
      "\t}",
      "});",
      " ",
      "class $1 extends Component {",
      "\trender() { ",
      "\t\treturn (",
      "\t\t\t<View style={styles.container}>",
      "\t\t\t\t<Text>$1</Text>",
      "\t\t\t</View>",
      "\t\t);",
      "\t}",
      "}",
      " ",
      "export default connect()($1);"
    ]
  },
  "Functional Component": {
    "prefix": "rfc",
    "description": "React Functional Component Skeleton",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      " ",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$1",
      "\t\t</div>",
      "\t);",
      "}",
      " ",
      "$1.propTypes = {};",
      " ",
      "export default $1;"
    ]
  },
  "Functional Component TypeScript": {
    "prefix": "rfct",
    "description": "React Functional Component Skeleton for TypeScript",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      " ",
      "const $1 = () => {",
      "\treturn (",
      "\t\t<div>",
      "\t\t\t$1",
      "\t\t</div>",
      "\t);",
      "}",
      " ",
      "$1.propTypes = {};",
      " ",
      "export default $1;"
    ]
  },
  "Class Constructor": {
    "prefix": "con",
    "description": "Creates Class Constructor Skeleton",
    "body": [
      "constructor(props) {",
      "\tsuper(props);",
      "\tthis.state = {};",
      "}",
      " "
    ]
  },
  "Set State": {
    "prefix": "ss",
    "body": ["this.setState({ $1 });"],
    "description": "setState"
  },
  "Import React": {
    "prefix": "imr",
    "description": "Import React",
    "body": ["import React from 'react';"]
  },
  "Import React Native Element": {
    "prefix": "imrn",
    "description": "Import React Native Element",
    "body": ["import { $1 } from 'react-native';"]
  },
  "React Native StyleSheet": {
    "prefix": "rnss",
    "description": "React Native style sheet",
    "body": [
      "const styles = StyleSheet.create({",
      "\t$1: {",
      "\t\t$0",
      "\t}",
      "});"
    ]
  },
  "Redux Reducer": {
    "prefix": "reducer",
    "description": "Creates Redux reducer skeleton.",
    "body": [
      "const INITIAL_STATE = {};",
      " ",
      "export default (state = INITIAL_STATE, action) => {",
      "\tswitch (action.type) {",
      "\t\tcase $2:",
      "\t\t\treturn {...state}",
      "\t\tdefault:",
      "\t\t\treturn state",
      "\t}",
      "}"
    ]
  },
  "MapStateToProps": {
    "prefix": "mstp",
    "description": "mapStateToProps arrow function",
    "body": [
      "const mapStateToProps = ($1) => {",
      "\t return {",
      "\t\t$2",
      "\t};",
      "};"
    ]
  },
  "ActionCreator": {
    "prefix": "action",
    "description": "Action creator thunk",
    "body": [
      "export const $1 = () => {",
      "\treturn async dispatch => {",
      "\t\ttry {",
      "\t\t$2",
      "\t\t} catch (e) {}",
      "\t};",
      "};"
    ]
  }
}
